{"version":3,"sources":["components/SelectInput.jsx","components/SelectTipButtons.jsx","components/InputContainer.jsx","components/ResultsDisplay.jsx","components/ResultsContainer.jsx","App.js","helpers/getTotalAmount.js","reportWebVitals.js","index.js"],"names":["SelectInput","type","name","value","handleInputChange","classOfInput","className","class","min","onChange","SelectTipButtons","valuePref","handlePercentForButton","useState","buttonActive","setButtonActive","useEffect","map","item","onClick","percent","placeholder","InputContainer","bill","people","customPercent","ResultsDisplay","typeDisplay","amount","ResultsContainer","tip","total","resetValues","document","querySelector","setAttribute","removeAttribute","toFixed","initialState","App","amountValues","setAmountValues","tipPerson","totalPerson","finalAmountValues","setFinalAmountValues","newTotals","Number","totalForPerson","tipForPerson","isFinite","getTotalAmount","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.768b321d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./css/SelectInput.css\";\r\nexport default function SelectInput({ type, name, value, handleInputChange }) {\r\n  const classOfInput = value === '0' ? 'danger' : '' \r\n  return (\r\n    <div className=\"select-input__container\">\r\n      <div className=\"select-input__title\">\r\n        <h3>{type}</h3>\r\n        {\r\n          value === '0' && <span>Can't be zero</span>\r\n        }\r\n      </div>\r\n      <div className=\"input__container\">\r\n        {\r\n          type === 'Bill' ? \r\n          <i className=\"fas fa-dollar-sign\"></i> : <i class=\"fas fa-user\"></i>\r\n        }\r\n        <input\r\n          type=\"number\"\r\n          name={name}\r\n          value={value}\r\n          min={0}\r\n          className={classOfInput}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport \"./css/SelectTipButtons.css\";\r\nimport \"./css/TipButton.css\";\r\n\r\nexport default function SelectTipButtons({ name, value, valuePref, handleInputChange, handlePercentForButton}) {\r\n  const [buttonActive, setButtonActive] = useState('');\r\n  const buttonValues = [\"5\", \"10\", \"15\", \"25\", \"50\"];\r\n\r\n  const handleClick = (percent) => {\r\n    setButtonActive(percent);\r\n    handlePercentForButton(percent);\r\n  };\r\n  useEffect(() => {\r\n    if (value === '') {\r\n      setButtonActive(valuePref)\r\n    }\r\n  }, [value])\r\n  return (\r\n    <div className=\"select-tip-buttons__container\">\r\n      <h3>Select Tip %</h3>\r\n      <div>\r\n        {buttonValues.map((item) => {\r\n          return (\r\n            <button\r\n              key={item}\r\n              onClick={() => handleClick(item)}\r\n              className={\r\n                buttonActive === item ? `tip__button active` : \"tip__button\"\r\n              }\r\n            >\r\n              {item}%\r\n            </button>\r\n          );\r\n        })}\r\n        <input\r\n          onClick={() => setButtonActive('')}\r\n          type=\"number\"\r\n          min={0}\r\n          name={name}\r\n          value={value}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Custom\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React, { useState } from 'react'\r\n// export default function TipButon({percent, handleInputChange, isActive) {\r\n//   const classNameButton = isActive ? 'tip__button active' : 'tip__button'\r\n\r\n//   const handleClick = () => {\r\n//     setIsActive(!isActive)\r\n//     handleInputChange({target: {\r\n//       name: 'custom',\r\n//       value: percent\r\n//     }})\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <button onClick={handleClick} className={classNameButton}>{percent}%</button>\r\n//     </>\r\n//   )\r\n// }\r\n","import React from \"react\";\r\nimport SelectInput from \"./SelectInput\";\r\nimport SelectTipButtons from \"./SelectTipButtons\";\r\nimport \"./css/InputContainer.css\";\r\nexport default function InputContainer({ bill, people, customPercent, percent, handleInputChange, handlePercentForButton }) {\r\n  return (\r\n    <div className=\"main-inputs__container\">\r\n      <SelectInput\r\n        type=\"Bill\"\r\n        name=\"bill\"\r\n        value={bill}\r\n        handleInputChange={handleInputChange}\r\n      />\r\n      <SelectTipButtons\r\n        value={customPercent}\r\n        valuePref={percent}\r\n        handlePercentForButton={handlePercentForButton}\r\n        handleInputChange={handleInputChange}\r\n        name=\"customPercent\"\r\n      />\r\n      <SelectInput\r\n        type=\"Number of people\"\r\n        name=\"people\"\r\n        handleInputChange={handleInputChange}\r\n        value={people}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ResultsDisplay({typeDisplay, amount}) {\r\n  return (\r\n    <div className='result-display__container'>\r\n      <div className='result-display__type'>\r\n        <h3 className='result-display__title'>{typeDisplay}</h3>\r\n        <p>/ person</p>\r\n      </div>\r\n      <div className='result-display__amount'>\r\n        <span>${amount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport ResultsDisplay from \"./ResultsDisplay\";\r\n\r\nimport \"./css/ResultsContainer.css\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\n\r\nexport default function ResultsContainer({ tip, total, resetValues }) {\r\n  useEffect(() => {\r\n    if (total === 0 || tip === 0) {\r\n      document.querySelector('.button__reset').setAttribute('disabled', '')\r\n    } else {\r\n      document.querySelector('.button__reset').removeAttribute('disabled')\r\n    }\r\n  }, [tip, total])\r\n  return (\r\n    <div className=\"results__container\">\r\n      <div>\r\n        <ResultsDisplay typeDisplay=\"Tip Amount\" amount={tip.toFixed(2)} />\r\n        <ResultsDisplay typeDisplay=\"Total\" amount={total.toFixed(2)} />\r\n      </div>\r\n      <button onClick={resetValues} className=\"button__reset\">RESET</button>\r\n    </div>\r\n  );\r\n}\r\n","import InputContainer from \"./components/InputContainer\";\nimport ResultsContainer from \"./components/ResultsContainer\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { getTotalAmount } from \"./helpers/getTotalAmount\";\n\n\nconst initialState = {\n    bill: \"\",\n    people: \"\",\n    percent: \"\",\n    customPercent: \"\",\n};\n\n\nfunction App() {\n  const [amountValues, setAmountValues] = useState(initialState);\n  const [finalAmountValues, setFinalAmountValues] = useState({\n    tipPerson: 0,\n    totalPerson: 0,\n  });\n  const { tipPerson, totalPerson } = finalAmountValues;\n  useEffect(() => {\n    const newTotals = getTotalAmount(amountValues);\n    setFinalAmountValues({\n      tipPerson: newTotals.tipForPerson,\n      totalPerson: newTotals.totalForPerson,\n    });\n  }, [amountValues]);\n\n  const handleInputChange = ({ target }) => {\n    setAmountValues({\n      ...amountValues,\n      [target.name]: target.value,\n    });\n  };\n  const handlePercentForButton = (percent) => {\n    setAmountValues({\n      ...amountValues,\n      percent,\n    });\n  };\n  const resetValues = () => {\n    setAmountValues(initialState);\n  }\n  return (\n    <div className=\"App\">\n      <h1>\n        Spli<br></br>tter\n      </h1>\n      <div className=\"grid__container\">\n        <InputContainer\n          {...amountValues}\n          handleInputChange={handleInputChange}\n          handlePercentForButton={handlePercentForButton}\n        />\n        <ResultsContainer resetValues={resetValues} tip={tipPerson} total={totalPerson} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const getTotalAmount = ({ bill, people, percent, customPercent }) => {\r\n  percent = customPercent === \"\" ? Number(percent) : Number(customPercent);\r\n  const totalForPerson =\r\n    (Number(bill) + Number(bill) * (percent / 100)) / people;\r\n  const tipForPerson = (Number(bill) * (percent / 100)) / people;\r\n\r\n  if (!isFinite(totalForPerson) || !isFinite(tipForPerson)) {\r\n    return {\r\n      totalForPerson: 0,\r\n      tipForPerson: 0,\r\n    };\r\n  } else {\r\n    return {\r\n      totalForPerson,\r\n      tipForPerson,\r\n    };\r\n  }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}